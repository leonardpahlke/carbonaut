---
- hosts: all
  become: yes
  vars:
    non_root_user: dev
    stress_test_iterations: 5 

  tasks:
    - name: Update all packages
      apt:
        update_cache: yes
        cache_valid_time: 86400  # Cache valid for a day

    - name: Create a non-root user with sudo access
      user:
        name: "{{ non_root_user }}"
        state: present
        createhome: yes
        shell: /bin/bash

    - name: Add non-root user to sudoers
      lineinfile:
        path: /etc/sudoers
        line: "{{ non_root_user }} ALL=(ALL) NOPASSWD:ALL"
        validate: 'visudo -cf %s'

    - name: Ensure Ansible temp directory exists with correct permissions
      file:
        path: "/home/{{ non_root_user }}/.ansible/tmp"
        state: directory
        owner: "{{ non_root_user }}"
        group: "{{ non_root_user }}"
        mode: '0775'
      become: yes

    - name: Remove any existing old Docker packages
      apt:
        name: docker
        state: absent
        purge: yes
      ignore_errors: yes  # In case the package is not found

    - name: Install required packages
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
        state: present

    - name: Ensure the directory for the apt keyring is present
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Add Docker's official GPG key
      get_url:
        url: https://download.docker.com/linux/debian/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: 'a+r'

    - name: Echo Docker repository into sources list
      become: yes  # This will execute the task with sudo
      ansible.builtin.shell:
        cmd: |
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      args:
        executable: /bin/bash

    - name: Force update of apt cache
      become: yes
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 0

    - name: Install Docker Engine and associated tools
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: latest

    - name: Add user to the Docker group
      user:
        name: "{{ non_root_user }}"
        groups: docker
        append: yes

    - name: Ensure Docker service is enabled and running
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: Verify Docker installation by running hello-world
      become_user: "{{ non_root_user }}"
      command: docker run hello-world
      register: hello_world_output

    - name: Output the result from hello-world Docker image
      debug:
        var: hello_world_output.stdout_lines

    - name: Load intel_rapl_common module
      modprobe:
        name: intel_rapl_common
        state: present

    - name: Install stress testing tools
      apt:
        name:
          - stress
          - memtester
          - fio
        state: latest

    - name: Copy benchmarking system_stress_test.bash script to the remote server
      copy:
        src: "{{ playbook_dir }}/system_stress_test.bash"
        dest: /usr/local/bin/system_stress_test.bash
        owner: "{{ non_root_user }}"
        group: "{{ non_root_user }}"
        mode: '0755'

    - name: Test the stress command
      become_user: "{{ non_root_user }}"
      command: stress --version
      register: stress_test
      ignore_errors: true

    - name: Output the result from the stress command
      debug:
        var: stress_test.stdout_lines

    - name: Ensure permissions for powercap
      ansible.builtin.shell: |
        chmod -R a+r /sys/class/powercap
      become: yes

    - name: Verify if powercap energy_uj files exist
      stat:
        path: /sys/class/powercap/intel-rapl:0/energy_uj
      register: powercap_rapl

    - name: Output powercap_rapl existence
      debug:
        msg: "Powercap energy_uj file exists: {{ powercap_rapl.stat.exists }}"

    - name: Run Scaphandre for power consumption monitoring
      community.docker.docker_container:
        name: scaphandre
        image: hubblo/scaphandre
        state: started
        restart_policy: unless-stopped
        detach: yes
        volumes:
          - /sys/class/powercap:/sys/class/powercap
          - /proc:/proc
        ports:
          - "8080:8080"
        command: -s powercap_rapl prometheus
      become: yes
      # when: powercap_rapl.stat.exists
